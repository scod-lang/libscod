State 64 conflicts: 1 shift/reduce
State 186 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: Attributes "SCOD"
    3       | "SCOD"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: Attributes Definition
    7                     | Definition
    8                     | error

    9 Definition: MemoryDefinition
   10           | RegisterDefinition
   11           | FieldDefinition
   12           | FormatDefinition
   13           | BufferDefinition
   14           | InstructionDefinition
   15           | MicroProcessorDefinition
   16           | CacheDefinition
   17           | InterconnectDefinition
   18           | OptionDefinition
   19           | EnumerationDefinition
   20           | UsingDefinition

   21 MemoryDefinition: "memory" Identifier ":" MappingType

   22 RegisterDefinition: "register" Identifier ":" Type

   23 FieldDefinition: "field" Identifier ":" Type

   24 FormatDefinition: "format" Identifier ":" BasicType "=" FormatFields

   25 FormatFields: MappingLiteral

   26 BufferDefinition: "buffer" Identifier ":" Type "=" Term

   27 InstructionDefinition: "instruction" Identifier ":" BasicType "=" Statement
   28                      | "instruction" Identifier ":" BasicType "=" Statement InstructionOptions

   29 MicroProcessorDefinition: "microprocessor" Identifier ":" IdentifierPath "=" Statement
   30                         | "microprocessor" Identifier ":" IdentifierPath "=" Statement MicroProcessorOptions

   31 CacheDefinition: "cache" Identifier ":" Type "=" MappingLiteral

   32 InterconnectDefinition: "interconnect" Identifier ":" Type "=" MappingLiteral

   33 OptionDefinition: ReferenceLiteral DecodingOption
   34                 | ReferenceLiteral SyntaxOption
   35                 | ReferenceLiteral ExpansionOption

   36 EnumerationDefinition: "enumeration" Identifier "=" Enumerators

   37 Enumerators: SetLiteral

   38 UsingDefinition: "using" Identifier "=" Type

   39 InstructionOptions: InstructionOptions InstructionOption
   40                   | InstructionOption

   41 InstructionOption: DecodingOption
   42                  | SyntaxOption
   43                  | ExpansionOption

   44 DecodingOption: "decoding" "=" RecordLiteral

   45 SyntaxOption: "syntax" "=" SetLiteral

   46 ExpansionOption: "expansion" "=" SetLiteral

   47 MicroProcessorOptions: MicroProcessorOptions MicroProcessorOption
   48                      | MicroProcessorOption

   49 MicroProcessorOption: StageOption

   50 StageOption: "stage" Identifier "=" BlockStatement

   51 Statements: Statements Statement
   52           | Statement

   53 Statement: SkipStatement
   54          | AbstractStatement
   55          | BlockStatement
   56          | CallStatement
   57          | LetStatement
   58          | AssignmentStatement
   59          | ConditionalStatement

   60 SkipStatement: "skip"

   61 AbstractStatement: "abstract"

   62 BlockStatement: "{" Statements "}"
   63               | "{" error "}"

   64 CallStatement: DirectCallExpression

   65 LetStatement: "let" VariableBindings "in" Statement

   66 AssignmentStatement: DirectCallExpression ":=" Term

   67 ConditionalStatement: "if" Term "then" Statement
   68                     | "if" Term "then" Statement "else" Statement

   69 Terms: Terms "," Term
   70      | Term

   71 Term: Expression
   72     | LetExpression
   73     | ConditionalExpression
   74     | OperatorExpression

   75 Expression: "(" Term ")"
   76           | CallExpression
   77           | Literal
   78           | "+" Term
   79           | "-" Term

   80 LetExpression: "let" VariableBindings "in" Term

   81 ConditionalExpression: "if" Term "then" Expression "else" Expression

   82 OperatorExpression: "not" Term
   83                   | Term "and" Term
   84                   | Term "or" Term
   85                   | Term "xor" Term
   86                   | Term "implies" Term
   87                   | Term "=>" Term
   88                   | Term "+" Term
   89                   | Term "(+)" Term
   90                   | Term "-" Term
   91                   | Term "(-)" Term
   92                   | Term "*" Term
   93                   | Term "<<" Term
   94                   | Term "(<<)" Term
   95                   | Term ">>" Term
   96                   | Term "(>>)" Term
   97                   | Term "=" Term
   98                   | Term "!=" Term
   99                   | Term "<" Term
  100                   | Term "<=" Term
  101                   | Term ">" Term
  102                   | Term ">=" Term

  103 CallExpression: DirectCallExpression
  104               | MethodCallExpression

  105 DirectCallExpression: IdentifierPath
  106                     | IdentifierPath "(" ")"
  107                     | IdentifierPath "(" Terms ")"
  108                     | IdentifierPath "(" error ")"

  109 MethodCallExpression: Expression "." Identifier
  110                     | Expression "." Identifier "(" ")"
  111                     | Expression "." Identifier "(" Terms ")"
  112                     | Expression "." Identifier "(" error ")"

  113 Literal: BooleanLiteral
  114        | IntegerLiteral
  115        | BinaryLiteral
  116        | StringLiteral
  117        | SetLiteral
  118        | ListLiteral
  119        | RangeLiteral
  120        | RecordLiteral
  121        | MappingLiteral
  122        | ReferenceLiteral
  123        | GrammarLiteral

  124 BooleanLiteral: "true"
  125               | "false"

  126 IntegerLiteral: "integer"

  127 BinaryLiteral: "binary"
  128              | "hexadecimal"

  129 StringLiteral: "string"

  130 SetLiteral: "{" Terms "}"

  131 ListLiteral: "[" Terms "]"

  132 RangeLiteral: "[" Term ".." Term "]"

  133 RecordLiteral: "{" Assignments "}"

  134 Assignments: Assignments "," Assignment
  135            | Assignment

  136 Assignment: Identifier ":" Term

  137 MappingLiteral: "{" Mappings "}"

  138 Mappings: Mappings "," Mapping
  139         | Mapping

  140 Mapping: Term "->" Term
  141        | "(" Terms ")" "->" Term

  142 ReferenceLiteral: "@" IdentifierPath

  143 GrammarLiteral: "::" Terminals ";"

  144 Terminals: Terminals Terminal
  145          | Terminal

  146 Terminal: DirectCallExpression
  147         | IntegerLiteral
  148         | BinaryLiteral
  149         | StringLiteral
  150         | ReferenceLiteral

  151 Type: BasicType
  152     | MappingType

  153 BasicType: IdentifierPath
  154          | PropertyType

  155 PropertyType: IdentifierPath "'" IntegerLiteral

  156 MappingType: ArgumentTypes "->" BasicType

  157 ArgumentTypes: ArgumentTypes "*" BasicType
  158              | Type

  159 VariableBindings: VariableBindings "," VariableBinding
  160                 | VariableBinding

  161 VariableBinding: AttributedVariable "=" Term

  162 AttributedVariable: Attributes Variable
  163                   | Variable

  164 Variable: TypedVariable
  165         | Identifier

  166 TypedVariable: Identifier ":" Type

  167 Identifier: "identifier"
  168           | "instruction"
  169           | "decoding"

  170 IdentifierPath: IdentifierPath "::" Identifier
  171               | Identifier

  172 Attributes: Attributes Attribute
  173           | Attribute

  174 Attribute: "[" BasicAttribute "]"
  175          | "[" ExpressionAttribute "]"
  176          | "[" error "]"

  177 BasicAttribute: Identifier

  178 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 8 63 108 112 176
    "SCOD" <CST::Token::Ptr> (258) 2 3
    "memory" <CST::Token::Ptr> (259) 21
    "register" <CST::Token::Ptr> (260) 22
    "field" <CST::Token::Ptr> (261) 23
    "format" <CST::Token::Ptr> (262) 24
    "buffer" <CST::Token::Ptr> (263) 26
    "instruction" <CST::Token::Ptr> (264) 27 28 168
    "microprocessor" <CST::Token::Ptr> (265) 29 30
    "cache" <CST::Token::Ptr> (266) 31
    "interconnect" <CST::Token::Ptr> (267) 32
    "decoding" <CST::Token::Ptr> (268) 44 169
    "syntax" <CST::Token::Ptr> (269) 45
    "expansion" <CST::Token::Ptr> (270) 46
    "stage" <CST::Token::Ptr> (271) 50
    "enumeration" <CST::Token::Ptr> (272) 36
    "using" <CST::Token::Ptr> (273) 38
    "skip" <CST::Token::Ptr> (274) 60
    "abstract" <CST::Token::Ptr> (275) 61
    "let" <CST::Token::Ptr> (276) 65 80
    "in" <CST::Token::Ptr> (277) 65 80
    "if" <CST::Token::Ptr> (278) 67 68 81
    "then" <CST::Token::Ptr> (279) 67 68 81
    "else" <CST::Token::Ptr> (280) 68 81
    "false" <CST::Token::Ptr> (281) 125
    "true" <CST::Token::Ptr> (282) 124
    "not" <CST::Token::Ptr> (283) 82
    "and" <CST::Token::Ptr> (284) 83
    "or" <CST::Token::Ptr> (285) 84
    "xor" <CST::Token::Ptr> (286) 85
    "implies" <CST::Token::Ptr> (287) 86
    "=>" <CST::Token::Ptr> (288) 87
    "+" <CST::Token::Ptr> (289) 78 88
    "(+)" <CST::Token::Ptr> (290) 89
    "-" <CST::Token::Ptr> (291) 79 90
    "(-)" <CST::Token::Ptr> (292) 91
    "*" <CST::Token::Ptr> (293) 92 157
    "<<" <CST::Token::Ptr> (294) 93
    "(<<)" <CST::Token::Ptr> (295) 94
    ">>" <CST::Token::Ptr> (296) 95
    "(>>)" <CST::Token::Ptr> (297) 96
    "=" <CST::Token::Ptr> (298) 24 26 27 28 29 30 31 32 36 38 44 45 46 50 97 161
    "!=" <CST::Token::Ptr> (299) 98
    "<" <CST::Token::Ptr> (300) 99
    "<=" <CST::Token::Ptr> (301) 100
    ">" <CST::Token::Ptr> (302) 101
    ">=" <CST::Token::Ptr> (303) 102
    ":=" <CST::Token::Ptr> (304) 66
    "->" <CST::Token::Ptr> (305) 140 141 156
    "'" <CST::Token::Ptr> (306) 155
    ":" <CST::Token::Ptr> (307) 21 22 23 24 26 27 28 29 30 31 32 136 166
    ";" <CST::Token::Ptr> (308) 143
    "::" <CST::Token::Ptr> (309) 143 170
    "(" <CST::Token::Ptr> (310) 75 106 107 108 110 111 112 141
    ")" <CST::Token::Ptr> (311) 75 106 107 108 110 111 112 141
    "[" <CST::Token::Ptr> (312) 131 132 174 175 176
    "]" <CST::Token::Ptr> (313) 131 132 174 175 176
    "{" <CST::Token::Ptr> (314) 62 63 130 133 137
    "}" <CST::Token::Ptr> (315) 62 63 130 133 137
    "@" <CST::Token::Ptr> (316) 142
    "," <CST::Token::Ptr> (317) 69 134 138 159
    "." <CST::Token::Ptr> (318) 109 110 111 112
    ".." <CST::Token::Ptr> (319) 132
    "integer" <ValueLiteral::Ptr> (320) 126
    "binary" <ValueLiteral::Ptr> (321) 127
    "hexadecimal" <ValueLiteral::Ptr> (322) 128
    "string" <ValueLiteral::Ptr> (323) 129
    "identifier" <Identifier::Ptr> (324) 167


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    Specification <Specification::Ptr> (71)
        on left: 1
        on right: 0
    Header <HeaderDefinition::Ptr> (72)
        on left: 2 3
        on right: 1
    Definitions <Definitions::Ptr> (73)
        on left: 4 5
        on right: 1 4
    AttributedDefinition <Definition::Ptr> (74)
        on left: 6 7 8
        on right: 4 5
    Definition <Definition::Ptr> (75)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20
        on right: 6 7
    MemoryDefinition <MemoryDefinition::Ptr> (76)
        on left: 21
        on right: 9
    RegisterDefinition <RegisterDefinition::Ptr> (77)
        on left: 22
        on right: 10
    FieldDefinition <FieldDefinition::Ptr> (78)
        on left: 23
        on right: 11
    FormatDefinition <FormatDefinition::Ptr> (79)
        on left: 24
        on right: 12
    FormatFields <MappingLiteral::Ptr> (80)
        on left: 25
        on right: 24
    BufferDefinition <BufferDefinition::Ptr> (81)
        on left: 26
        on right: 13
    InstructionDefinition <InstructionDefinition::Ptr> (82)
        on left: 27 28
        on right: 14
    MicroProcessorDefinition <MicroProcessorDefinition::Ptr> (83)
        on left: 29 30
        on right: 15
    CacheDefinition <CacheDefinition::Ptr> (84)
        on left: 31
        on right: 16
    InterconnectDefinition <InterconnectDefinition::Ptr> (85)
        on left: 32
        on right: 17
    OptionDefinition <OptionDefinition::Ptr> (86)
        on left: 33 34 35
        on right: 18
    EnumerationDefinition <EnumerationDefinition::Ptr> (87)
        on left: 36
        on right: 19
    Enumerators <SetLiteral::Ptr> (88)
        on left: 37
        on right: 36
    UsingDefinition <UsingDefinition::Ptr> (89)
        on left: 38
        on right: 20
    InstructionOptions <Options::Ptr> (90)
        on left: 39 40
        on right: 28 39
    InstructionOption <Option::Ptr> (91)
        on left: 41 42 43
        on right: 39 40
    DecodingOption <DecodingOption::Ptr> (92)
        on left: 44
        on right: 33 41
    SyntaxOption <SyntaxOption::Ptr> (93)
        on left: 45
        on right: 34 42
    ExpansionOption <ExpansionOption::Ptr> (94)
        on left: 46
        on right: 35 43
    MicroProcessorOptions <Options::Ptr> (95)
        on left: 47 48
        on right: 30 47
    MicroProcessorOption <Option::Ptr> (96)
        on left: 49
        on right: 47 48
    StageOption <StageOption::Ptr> (97)
        on left: 50
        on right: 49
    Statements <Statements::Ptr> (98)
        on left: 51 52
        on right: 51 62
    Statement <Statement::Ptr> (99)
        on left: 53 54 55 56 57 58 59
        on right: 27 28 29 30 51 52 65 67 68
    SkipStatement <SkipStatement::Ptr> (100)
        on left: 60
        on right: 53
    AbstractStatement <SkipStatement::Ptr> (101)
        on left: 61
        on right: 54
    BlockStatement <BlockStatement::Ptr> (102)
        on left: 62 63
        on right: 50 55
    CallStatement <CallStatement::Ptr> (103)
        on left: 64
        on right: 56
    LetStatement <LetStatement::Ptr> (104)
        on left: 65
        on right: 57
    AssignmentStatement <AssignmentStatement::Ptr> (105)
        on left: 66
        on right: 58
    ConditionalStatement <ConditionalStatement::Ptr> (106)
        on left: 67 68
        on right: 59
    Terms <Expressions::Ptr> (107)
        on left: 69 70
        on right: 69 107 111 130 131 141
    Term <Expression::Ptr> (108)
        on left: 71 72 73 74
        on right: 26 66 67 68 69 70 75 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 132 136 140 141 161 178
    Expression <Expression::Ptr> (109)
        on left: 75 76 77 78 79
        on right: 71 81 109 110 111 112
    LetExpression <LetExpression::Ptr> (110)
        on left: 80
        on right: 72
    ConditionalExpression <ConditionalExpression::Ptr> (111)
        on left: 81
        on right: 73
    OperatorExpression <Expression::Ptr> (112)
        on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
        on right: 74
    CallExpression <CallExpression::Ptr> (113)
        on left: 103 104
        on right: 76
    DirectCallExpression <DirectCallExpression::Ptr> (114)
        on left: 105 106 107 108
        on right: 64 66 103 146
    MethodCallExpression <MethodCallExpression::Ptr> (115)
        on left: 109 110 111 112
        on right: 104
    Literal <Literal::Ptr> (116)
        on left: 113 114 115 116 117 118 119 120 121 122 123
        on right: 77
    BooleanLiteral <ValueLiteral::Ptr> (117)
        on left: 124 125
        on right: 113
    IntegerLiteral <ValueLiteral::Ptr> (118)
        on left: 126
        on right: 114 147 155
    BinaryLiteral <ValueLiteral::Ptr> (119)
        on left: 127 128
        on right: 115 148
    StringLiteral <ValueLiteral::Ptr> (120)
        on left: 129
        on right: 116 149
    SetLiteral <SetLiteral::Ptr> (121)
        on left: 130
        on right: 37 45 46 117
    ListLiteral <ListLiteral::Ptr> (122)
        on left: 131
        on right: 118
    RangeLiteral <RangeLiteral::Ptr> (123)
        on left: 132
        on right: 119
    RecordLiteral <RecordLiteral::Ptr> (124)
        on left: 133
        on right: 44 120
    Assignments <NamedExpressions::Ptr> (125)
        on left: 134 135
        on right: 133 134
    Assignment <NamedExpression::Ptr> (126)
        on left: 136
        on right: 134 135
    MappingLiteral <MappingLiteral::Ptr> (127)
        on left: 137
        on right: 25 31 32 121
    Mappings <MappedExpressions::Ptr> (128)
        on left: 138 139
        on right: 137 138
    Mapping <MappedExpression::Ptr> (129)
        on left: 140 141
        on right: 138 139
    ReferenceLiteral <ReferenceLiteral::Ptr> (130)
        on left: 142
        on right: 33 34 35 122 150
    GrammarLiteral <GrammarLiteral::Ptr> (131)
        on left: 143
        on right: 123
    Terminals <Expressions::Ptr> (132)
        on left: 144 145
        on right: 143 144
    Terminal <Expression::Ptr> (133)
        on left: 146 147 148 149 150
        on right: 144 145
    Type <libscod::CST::Type::Ptr> (134)
        on left: 151 152
        on right: 22 23 26 31 32 38 158 166
    BasicType <libscod::CST::Type::Ptr> (135)
        on left: 153 154
        on right: 24 27 28 151 156 157
    PropertyType <libscod::CST::Type::Ptr> (136)
        on left: 155
        on right: 154
    MappingType <MappingType::Ptr> (137)
        on left: 156
        on right: 21 152
    ArgumentTypes <Types::Ptr> (138)
        on left: 157 158
        on right: 156 157
    VariableBindings <VariableBindings::Ptr> (139)
        on left: 159 160
        on right: 65 80 159
    VariableBinding <VariableBinding::Ptr> (140)
        on left: 161
        on right: 159 160
    AttributedVariable <VariableDefinition::Ptr> (141)
        on left: 162 163
        on right: 161
    Variable <VariableDefinition::Ptr> (142)
        on left: 164 165
        on right: 162 163
    TypedVariable <VariableDefinition::Ptr> (143)
        on left: 166
        on right: 164
    Identifier <Identifier::Ptr> (144)
        on left: 167 168 169
        on right: 21 22 23 24 26 27 28 29 30 31 32 36 38 50 109 110 111 112 136 165 166 170 171 177 178
    IdentifierPath <IdentifierPath::Ptr> (145)
        on left: 170 171
        on right: 29 30 105 106 107 108 142 153 155 170
    Attributes <Attributes::Ptr> (146)
        on left: 172 173
        on right: 2 6 162 172
    Attribute <Attribute::Ptr> (147)
        on left: 174 175 176
        on right: 172 173
    BasicAttribute <BasicAttribute::Ptr> (148)
        on left: 177
        on right: 174
    ExpressionAttribute <ExpressionAttribute::Ptr> (149)
        on left: 178
        on right: 175


State 0

    0 $accept: • Specification "end of file"

    "SCOD"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4
    Attributes     go to state 5
    Attribute      go to state 6


State 1

    3 Header: "SCOD" •

    $default  reduce using rule 3 (Header)


State 2

  174 Attribute: "[" • BasicAttribute "]"
  175          | "[" • ExpressionAttribute "]"
  176          | "[" • error "]"

    error          shift, and go to state 7
    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier           go to state 11
    BasicAttribute       go to state 12
    ExpressionAttribute  go to state 13


State 3

    0 $accept: Specification • "end of file"

    "end of file"  shift, and go to state 14


State 4

    1 Specification: Header • Definitions

    error             shift, and go to state 15
    "memory"          shift, and go to state 16
    "register"        shift, and go to state 17
    "field"           shift, and go to state 18
    "format"          shift, and go to state 19
    "buffer"          shift, and go to state 20
    "instruction"     shift, and go to state 21
    "microprocessor"  shift, and go to state 22
    "cache"           shift, and go to state 23
    "interconnect"    shift, and go to state 24
    "enumeration"     shift, and go to state 25
    "using"           shift, and go to state 26
    "["               shift, and go to state 2
    "@"               shift, and go to state 27

    Definitions               go to state 28
    AttributedDefinition      go to state 29
    Definition                go to state 30
    MemoryDefinition          go to state 31
    RegisterDefinition        go to state 32
    FieldDefinition           go to state 33
    FormatDefinition          go to state 34
    BufferDefinition          go to state 35
    InstructionDefinition     go to state 36
    MicroProcessorDefinition  go to state 37
    CacheDefinition           go to state 38
    InterconnectDefinition    go to state 39
    OptionDefinition          go to state 40
    EnumerationDefinition     go to state 41
    UsingDefinition           go to state 42
    ReferenceLiteral          go to state 43
    Attributes                go to state 44
    Attribute                 go to state 6


State 5

    2 Header: Attributes • "SCOD"
  172 Attributes: Attributes • Attribute

    "SCOD"  shift, and go to state 45
    "["     shift, and go to state 2

    Attribute  go to state 46


State 6

  173 Attributes: Attribute •

    $default  reduce using rule 173 (Attributes)


State 7

  176 Attribute: "[" error • "]"

    "]"  shift, and go to state 47


State 8

  168 Identifier: "instruction" •

    $default  reduce using rule 168 (Identifier)


State 9

  169 Identifier: "decoding" •

    $default  reduce using rule 169 (Identifier)


State 10

  167 Identifier: "identifier" •

    $default  reduce using rule 167 (Identifier)


State 11

  177 BasicAttribute: Identifier •
  178 ExpressionAttribute: Identifier • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    $default  reduce using rule 177 (BasicAttribute)

    Term                   go to state 63
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 12

  174 Attribute: "[" BasicAttribute • "]"

    "]"  shift, and go to state 85


State 13

  175 Attribute: "[" ExpressionAttribute • "]"

    "]"  shift, and go to state 86


State 14

    0 $accept: Specification "end of file" •

    $default  accept


State 15

    8 AttributedDefinition: error •

    $default  reduce using rule 8 (AttributedDefinition)


State 16

   21 MemoryDefinition: "memory" • Identifier ":" MappingType

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 87


State 17

   22 RegisterDefinition: "register" • Identifier ":" Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 88


State 18

   23 FieldDefinition: "field" • Identifier ":" Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 89


State 19

   24 FormatDefinition: "format" • Identifier ":" BasicType "=" FormatFields

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 90


State 20

   26 BufferDefinition: "buffer" • Identifier ":" Type "=" Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 91


State 21

   27 InstructionDefinition: "instruction" • Identifier ":" BasicType "=" Statement
   28                      | "instruction" • Identifier ":" BasicType "=" Statement InstructionOptions

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 92


State 22

   29 MicroProcessorDefinition: "microprocessor" • Identifier ":" IdentifierPath "=" Statement
   30                         | "microprocessor" • Identifier ":" IdentifierPath "=" Statement MicroProcessorOptions

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 93


State 23

   31 CacheDefinition: "cache" • Identifier ":" Type "=" MappingLiteral

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 94


State 24

   32 InterconnectDefinition: "interconnect" • Identifier ":" Type "=" MappingLiteral

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 95


State 25

   36 EnumerationDefinition: "enumeration" • Identifier "=" Enumerators

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 96


State 26

   38 UsingDefinition: "using" • Identifier "=" Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 97


State 27

  142 ReferenceLiteral: "@" • IdentifierPath

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier      go to state 83
    IdentifierPath  go to state 98


State 28

    1 Specification: Header Definitions •
    4 Definitions: Definitions • AttributedDefinition

    error             shift, and go to state 15
    "memory"          shift, and go to state 16
    "register"        shift, and go to state 17
    "field"           shift, and go to state 18
    "format"          shift, and go to state 19
    "buffer"          shift, and go to state 20
    "instruction"     shift, and go to state 21
    "microprocessor"  shift, and go to state 22
    "cache"           shift, and go to state 23
    "interconnect"    shift, and go to state 24
    "enumeration"     shift, and go to state 25
    "using"           shift, and go to state 26
    "["               shift, and go to state 2
    "@"               shift, and go to state 27

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition      go to state 99
    Definition                go to state 30
    MemoryDefinition          go to state 31
    RegisterDefinition        go to state 32
    FieldDefinition           go to state 33
    FormatDefinition          go to state 34
    BufferDefinition          go to state 35
    InstructionDefinition     go to state 36
    MicroProcessorDefinition  go to state 37
    CacheDefinition           go to state 38
    InterconnectDefinition    go to state 39
    OptionDefinition          go to state 40
    EnumerationDefinition     go to state 41
    UsingDefinition           go to state 42
    ReferenceLiteral          go to state 43
    Attributes                go to state 44
    Attribute                 go to state 6


State 29

    5 Definitions: AttributedDefinition •

    $default  reduce using rule 5 (Definitions)


State 30

    7 AttributedDefinition: Definition •

    $default  reduce using rule 7 (AttributedDefinition)


State 31

    9 Definition: MemoryDefinition •

    $default  reduce using rule 9 (Definition)


State 32

   10 Definition: RegisterDefinition •

    $default  reduce using rule 10 (Definition)


State 33

   11 Definition: FieldDefinition •

    $default  reduce using rule 11 (Definition)


State 34

   12 Definition: FormatDefinition •

    $default  reduce using rule 12 (Definition)


State 35

   13 Definition: BufferDefinition •

    $default  reduce using rule 13 (Definition)


State 36

   14 Definition: InstructionDefinition •

    $default  reduce using rule 14 (Definition)


State 37

   15 Definition: MicroProcessorDefinition •

    $default  reduce using rule 15 (Definition)


State 38

   16 Definition: CacheDefinition •

    $default  reduce using rule 16 (Definition)


State 39

   17 Definition: InterconnectDefinition •

    $default  reduce using rule 17 (Definition)


State 40

   18 Definition: OptionDefinition •

    $default  reduce using rule 18 (Definition)


State 41

   19 Definition: EnumerationDefinition •

    $default  reduce using rule 19 (Definition)


State 42

   20 Definition: UsingDefinition •

    $default  reduce using rule 20 (Definition)


State 43

   33 OptionDefinition: ReferenceLiteral • DecodingOption
   34                 | ReferenceLiteral • SyntaxOption
   35                 | ReferenceLiteral • ExpansionOption

    "decoding"   shift, and go to state 100
    "syntax"     shift, and go to state 101
    "expansion"  shift, and go to state 102

    DecodingOption   go to state 103
    SyntaxOption     go to state 104
    ExpansionOption  go to state 105


State 44

    6 AttributedDefinition: Attributes • Definition
  172 Attributes: Attributes • Attribute

    "memory"          shift, and go to state 16
    "register"        shift, and go to state 17
    "field"           shift, and go to state 18
    "format"          shift, and go to state 19
    "buffer"          shift, and go to state 20
    "instruction"     shift, and go to state 21
    "microprocessor"  shift, and go to state 22
    "cache"           shift, and go to state 23
    "interconnect"    shift, and go to state 24
    "enumeration"     shift, and go to state 25
    "using"           shift, and go to state 26
    "["               shift, and go to state 2
    "@"               shift, and go to state 27

    Definition                go to state 106
    MemoryDefinition          go to state 31
    RegisterDefinition        go to state 32
    FieldDefinition           go to state 33
    FormatDefinition          go to state 34
    BufferDefinition          go to state 35
    InstructionDefinition     go to state 36
    MicroProcessorDefinition  go to state 37
    CacheDefinition           go to state 38
    InterconnectDefinition    go to state 39
    OptionDefinition          go to state 40
    EnumerationDefinition     go to state 41
    UsingDefinition           go to state 42
    ReferenceLiteral          go to state 43
    Attribute                 go to state 46


State 45

    2 Header: Attributes "SCOD" •

    $default  reduce using rule 2 (Header)


State 46

  172 Attributes: Attributes Attribute •

    $default  reduce using rule 172 (Attributes)


State 47

  176 Attribute: "[" error "]" •

    $default  reduce using rule 176 (Attribute)


State 48

   80 LetExpression: "let" • VariableBindings "in" Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "["            shift, and go to state 2
    "identifier"   shift, and go to state 10

    VariableBindings    go to state 107
    VariableBinding     go to state 108
    AttributedVariable  go to state 109
    Variable            go to state 110
    TypedVariable       go to state 111
    Identifier          go to state 112
    Attributes          go to state 113
    Attribute           go to state 6


State 49

   81 ConditionalExpression: "if" • Term "then" Expression "else" Expression

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 114
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 50

  125 BooleanLiteral: "false" •

    $default  reduce using rule 125 (BooleanLiteral)


State 51

  124 BooleanLiteral: "true" •

    $default  reduce using rule 124 (BooleanLiteral)


State 52

   82 OperatorExpression: "not" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 115
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 53

   78 Expression: "+" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 116
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 54

   79 Expression: "-" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 117
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 55

  143 GrammarLiteral: "::" • Terminals ";"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    DirectCallExpression  go to state 118
    IntegerLiteral        go to state 119
    BinaryLiteral         go to state 120
    StringLiteral         go to state 121
    ReferenceLiteral      go to state 122
    Terminals             go to state 123
    Terminal              go to state 124
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 56

   75 Expression: "(" • Term ")"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 125
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 57

  131 ListLiteral: "[" • Terms "]"
  132 RangeLiteral: "[" • Term ".." Term "]"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Terms                  go to state 126
    Term                   go to state 127
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 58

  130 SetLiteral: "{" • Terms "}"
  133 RecordLiteral: "{" • Assignments "}"
  137 MappingLiteral: "{" • Mappings "}"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 128
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Terms                  go to state 129
    Term                   go to state 130
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    Assignments            go to state 131
    Assignment             go to state 132
    MappingLiteral         go to state 80
    Mappings               go to state 133
    Mapping                go to state 134
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 135
    IdentifierPath         go to state 84


State 59

  126 IntegerLiteral: "integer" •

    $default  reduce using rule 126 (IntegerLiteral)


State 60

  127 BinaryLiteral: "binary" •

    $default  reduce using rule 127 (BinaryLiteral)


State 61

  128 BinaryLiteral: "hexadecimal" •

    $default  reduce using rule 128 (BinaryLiteral)


State 62

  129 StringLiteral: "string" •

    $default  reduce using rule 129 (StringLiteral)


State 63

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  178 ExpressionAttribute: Identifier Term •

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 178 (ExpressionAttribute)


State 64

   71 Term: Expression •
  109 MethodCallExpression: Expression • "." Identifier
  110                     | Expression • "." Identifier "(" ")"
  111                     | Expression • "." Identifier "(" Terms ")"
  112                     | Expression • "." Identifier "(" error ")"

    "."  shift, and go to state 156

    "."       [reduce using rule 71 (Term)]
    $default  reduce using rule 71 (Term)


State 65

   72 Term: LetExpression •

    $default  reduce using rule 72 (Term)


State 66

   73 Term: ConditionalExpression •

    $default  reduce using rule 73 (Term)


State 67

   74 Term: OperatorExpression •

    $default  reduce using rule 74 (Term)


State 68

   76 Expression: CallExpression •

    $default  reduce using rule 76 (Expression)


State 69

  103 CallExpression: DirectCallExpression •

    $default  reduce using rule 103 (CallExpression)


State 70

  104 CallExpression: MethodCallExpression •

    $default  reduce using rule 104 (CallExpression)


State 71

   77 Expression: Literal •

    $default  reduce using rule 77 (Expression)


State 72

  113 Literal: BooleanLiteral •

    $default  reduce using rule 113 (Literal)


State 73

  114 Literal: IntegerLiteral •

    $default  reduce using rule 114 (Literal)


State 74

  115 Literal: BinaryLiteral •

    $default  reduce using rule 115 (Literal)


State 75

  116 Literal: StringLiteral •

    $default  reduce using rule 116 (Literal)


State 76

  117 Literal: SetLiteral •

    $default  reduce using rule 117 (Literal)


State 77

  118 Literal: ListLiteral •

    $default  reduce using rule 118 (Literal)


State 78

  119 Literal: RangeLiteral •

    $default  reduce using rule 119 (Literal)


State 79

  120 Literal: RecordLiteral •

    $default  reduce using rule 120 (Literal)


State 80

  121 Literal: MappingLiteral •

    $default  reduce using rule 121 (Literal)


State 81

  122 Literal: ReferenceLiteral •

    $default  reduce using rule 122 (Literal)


State 82

  123 Literal: GrammarLiteral •

    $default  reduce using rule 123 (Literal)


State 83

  171 IdentifierPath: Identifier •

    $default  reduce using rule 171 (IdentifierPath)


State 84

  105 DirectCallExpression: IdentifierPath •
  106                     | IdentifierPath • "(" ")"
  107                     | IdentifierPath • "(" Terms ")"
  108                     | IdentifierPath • "(" error ")"
  170 IdentifierPath: IdentifierPath • "::" Identifier

    "::"  shift, and go to state 157
    "("   shift, and go to state 158

    $default  reduce using rule 105 (DirectCallExpression)


State 85

  174 Attribute: "[" BasicAttribute "]" •

    $default  reduce using rule 174 (Attribute)


State 86

  175 Attribute: "[" ExpressionAttribute "]" •

    $default  reduce using rule 175 (Attribute)


State 87

   21 MemoryDefinition: "memory" Identifier • ":" MappingType

    ":"  shift, and go to state 159


State 88

   22 RegisterDefinition: "register" Identifier • ":" Type

    ":"  shift, and go to state 160


State 89

   23 FieldDefinition: "field" Identifier • ":" Type

    ":"  shift, and go to state 161


State 90

   24 FormatDefinition: "format" Identifier • ":" BasicType "=" FormatFields

    ":"  shift, and go to state 162


State 91

   26 BufferDefinition: "buffer" Identifier • ":" Type "=" Term

    ":"  shift, and go to state 163


State 92

   27 InstructionDefinition: "instruction" Identifier • ":" BasicType "=" Statement
   28                      | "instruction" Identifier • ":" BasicType "=" Statement InstructionOptions

    ":"  shift, and go to state 164


State 93

   29 MicroProcessorDefinition: "microprocessor" Identifier • ":" IdentifierPath "=" Statement
   30                         | "microprocessor" Identifier • ":" IdentifierPath "=" Statement MicroProcessorOptions

    ":"  shift, and go to state 165


State 94

   31 CacheDefinition: "cache" Identifier • ":" Type "=" MappingLiteral

    ":"  shift, and go to state 166


State 95

   32 InterconnectDefinition: "interconnect" Identifier • ":" Type "=" MappingLiteral

    ":"  shift, and go to state 167


State 96

   36 EnumerationDefinition: "enumeration" Identifier • "=" Enumerators

    "="  shift, and go to state 168


State 97

   38 UsingDefinition: "using" Identifier • "=" Type

    "="  shift, and go to state 169


State 98

  142 ReferenceLiteral: "@" IdentifierPath •
  170 IdentifierPath: IdentifierPath • "::" Identifier

    "::"  shift, and go to state 157

    $default  reduce using rule 142 (ReferenceLiteral)


State 99

    4 Definitions: Definitions AttributedDefinition •

    $default  reduce using rule 4 (Definitions)


State 100

   44 DecodingOption: "decoding" • "=" RecordLiteral

    "="  shift, and go to state 170


State 101

   45 SyntaxOption: "syntax" • "=" SetLiteral

    "="  shift, and go to state 171


State 102

   46 ExpansionOption: "expansion" • "=" SetLiteral

    "="  shift, and go to state 172


State 103

   33 OptionDefinition: ReferenceLiteral DecodingOption •

    $default  reduce using rule 33 (OptionDefinition)


State 104

   34 OptionDefinition: ReferenceLiteral SyntaxOption •

    $default  reduce using rule 34 (OptionDefinition)


State 105

   35 OptionDefinition: ReferenceLiteral ExpansionOption •

    $default  reduce using rule 35 (OptionDefinition)


State 106

    6 AttributedDefinition: Attributes Definition •

    $default  reduce using rule 6 (AttributedDefinition)


State 107

   80 LetExpression: "let" VariableBindings • "in" Term
  159 VariableBindings: VariableBindings • "," VariableBinding

    "in"  shift, and go to state 173
    ","   shift, and go to state 174


State 108

  160 VariableBindings: VariableBinding •

    $default  reduce using rule 160 (VariableBindings)


State 109

  161 VariableBinding: AttributedVariable • "=" Term

    "="  shift, and go to state 175


State 110

  163 AttributedVariable: Variable •

    $default  reduce using rule 163 (AttributedVariable)


State 111

  164 Variable: TypedVariable •

    $default  reduce using rule 164 (Variable)


State 112

  165 Variable: Identifier •
  166 TypedVariable: Identifier • ":" Type

    ":"  shift, and go to state 176

    $default  reduce using rule 165 (Variable)


State 113

  162 AttributedVariable: Attributes • Variable
  172 Attributes: Attributes • Attribute

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "["            shift, and go to state 2
    "identifier"   shift, and go to state 10

    Variable       go to state 177
    TypedVariable  go to state 111
    Identifier     go to state 112
    Attribute      go to state 46


State 114

   81 ConditionalExpression: "if" Term • "then" Expression "else" Expression
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "then"     shift, and go to state 178
    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155


State 115

   82 OperatorExpression: "not" Term •
   83                   | Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    $default  reduce using rule 82 (OperatorExpression)


State 116

   78 Expression: "+" Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "*"  shift, and go to state 145

    $default  reduce using rule 78 (Expression)


State 117

   79 Expression: "-" Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "*"  shift, and go to state 145

    $default  reduce using rule 79 (Expression)


State 118

  146 Terminal: DirectCallExpression •

    $default  reduce using rule 146 (Terminal)


State 119

  147 Terminal: IntegerLiteral •

    $default  reduce using rule 147 (Terminal)


State 120

  148 Terminal: BinaryLiteral •

    $default  reduce using rule 148 (Terminal)


State 121

  149 Terminal: StringLiteral •

    $default  reduce using rule 149 (Terminal)


State 122

  150 Terminal: ReferenceLiteral •

    $default  reduce using rule 150 (Terminal)


State 123

  143 GrammarLiteral: "::" Terminals • ";"
  144 Terminals: Terminals • Terminal

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    ";"            shift, and go to state 179
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    DirectCallExpression  go to state 118
    IntegerLiteral        go to state 119
    BinaryLiteral         go to state 120
    StringLiteral         go to state 121
    ReferenceLiteral      go to state 122
    Terminal              go to state 180
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 124

  145 Terminals: Terminal •

    $default  reduce using rule 145 (Terminals)


State 125

   75 Expression: "(" Term • ")"
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155
    ")"        shift, and go to state 181


State 126

   69 Terms: Terms • "," Term
  131 ListLiteral: "[" Terms • "]"

    "]"  shift, and go to state 182
    ","  shift, and go to state 183


State 127

   70 Terms: Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  132 RangeLiteral: "[" Term • ".." Term "]"

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155
    ".."       shift, and go to state 184

    $default  reduce using rule 70 (Terms)


State 128

   75 Expression: "(" • Term ")"
  141 Mapping: "(" • Terms ")" "->" Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Terms                  go to state 185
    Term                   go to state 186
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 129

   69 Terms: Terms • "," Term
  130 SetLiteral: "{" Terms • "}"

    "}"  shift, and go to state 187
    ","  shift, and go to state 183


State 130

   70 Terms: Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  140 Mapping: Term • "->" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155
    "->"       shift, and go to state 188

    $default  reduce using rule 70 (Terms)


State 131

  133 RecordLiteral: "{" Assignments • "}"
  134 Assignments: Assignments • "," Assignment

    "}"  shift, and go to state 189
    ","  shift, and go to state 190


State 132

  135 Assignments: Assignment •

    $default  reduce using rule 135 (Assignments)


State 133

  137 MappingLiteral: "{" Mappings • "}"
  138 Mappings: Mappings • "," Mapping

    "}"  shift, and go to state 191
    ","  shift, and go to state 192


State 134

  139 Mappings: Mapping •

    $default  reduce using rule 139 (Mappings)


State 135

  136 Assignment: Identifier • ":" Term
  171 IdentifierPath: Identifier •

    ":"  shift, and go to state 193

    $default  reduce using rule 171 (IdentifierPath)


State 136

   83 OperatorExpression: Term "and" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 194
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 137

   84 OperatorExpression: Term "or" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 195
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 138

   85 OperatorExpression: Term "xor" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 196
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 139

   86 OperatorExpression: Term "implies" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 197
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 140

   87 OperatorExpression: Term "=>" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 198
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 141

   88 OperatorExpression: Term "+" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 199
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 142

   89 OperatorExpression: Term "(+)" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 200
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 143

   90 OperatorExpression: Term "-" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 201
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 144

   91 OperatorExpression: Term "(-)" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 202
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 145

   92 OperatorExpression: Term "*" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 203
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 146

   93 OperatorExpression: Term "<<" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 204
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 147

   94 OperatorExpression: Term "(<<)" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 205
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 148

   95 OperatorExpression: Term ">>" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 206
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 149

   96 OperatorExpression: Term "(>>)" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 207
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 150

   97 OperatorExpression: Term "=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 208
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 151

   98 OperatorExpression: Term "!=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 209
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 152

   99 OperatorExpression: Term "<" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 210
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 153

  100 OperatorExpression: Term "<=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 211
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 154

  101 OperatorExpression: Term ">" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 212
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 155

  102 OperatorExpression: Term ">=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 213
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 156

  109 MethodCallExpression: Expression "." • Identifier
  110                     | Expression "." • Identifier "(" ")"
  111                     | Expression "." • Identifier "(" Terms ")"
  112                     | Expression "." • Identifier "(" error ")"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 214


State 157

  170 IdentifierPath: IdentifierPath "::" • Identifier

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 215


State 158

  106 DirectCallExpression: IdentifierPath "(" • ")"
  107                     | IdentifierPath "(" • Terms ")"
  108                     | IdentifierPath "(" • error ")"

    error          shift, and go to state 216
    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    ")"            shift, and go to state 217
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Terms                  go to state 218
    Term                   go to state 219
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 159

   21 MemoryDefinition: "memory" Identifier ":" • MappingType

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 220
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 223
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 160

   22 RegisterDefinition: "register" Identifier ":" • Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 226
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 161

   23 FieldDefinition: "field" Identifier ":" • Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 228
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 162

   24 FormatDefinition: "format" Identifier ":" • BasicType "=" FormatFields

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    BasicType       go to state 229
    PropertyType    go to state 222
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 163

   26 BufferDefinition: "buffer" Identifier ":" • Type "=" Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 230
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 164

   27 InstructionDefinition: "instruction" Identifier ":" • BasicType "=" Statement
   28                      | "instruction" Identifier ":" • BasicType "=" Statement InstructionOptions

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    BasicType       go to state 231
    PropertyType    go to state 222
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 165

   29 MicroProcessorDefinition: "microprocessor" Identifier ":" • IdentifierPath "=" Statement
   30                         | "microprocessor" Identifier ":" • IdentifierPath "=" Statement MicroProcessorOptions

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier      go to state 83
    IdentifierPath  go to state 232


State 166

   31 CacheDefinition: "cache" Identifier ":" • Type "=" MappingLiteral

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 233
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 167

   32 InterconnectDefinition: "interconnect" Identifier ":" • Type "=" MappingLiteral

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 234
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 168

   36 EnumerationDefinition: "enumeration" Identifier "=" • Enumerators

    "{"  shift, and go to state 235

    Enumerators  go to state 236
    SetLiteral   go to state 237


State 169

   38 UsingDefinition: "using" Identifier "=" • Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 238
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 170

   44 DecodingOption: "decoding" "=" • RecordLiteral

    "{"  shift, and go to state 239

    RecordLiteral  go to state 240


State 171

   45 SyntaxOption: "syntax" "=" • SetLiteral

    "{"  shift, and go to state 235

    SetLiteral  go to state 241


State 172

   46 ExpansionOption: "expansion" "=" • SetLiteral

    "{"  shift, and go to state 235

    SetLiteral  go to state 242


State 173

   80 LetExpression: "let" VariableBindings "in" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 243
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 174

  159 VariableBindings: VariableBindings "," • VariableBinding

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "["            shift, and go to state 2
    "identifier"   shift, and go to state 10

    VariableBinding     go to state 244
    AttributedVariable  go to state 109
    Variable            go to state 110
    TypedVariable       go to state 111
    Identifier          go to state 112
    Attributes          go to state 113
    Attribute           go to state 6


State 175

  161 VariableBinding: AttributedVariable "=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 245
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 176

  166 TypedVariable: Identifier ":" • Type

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Type            go to state 246
    BasicType       go to state 221
    PropertyType    go to state 222
    MappingType     go to state 227
    ArgumentTypes   go to state 224
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 177

  162 AttributedVariable: Attributes Variable •

    $default  reduce using rule 162 (AttributedVariable)


State 178

   81 ConditionalExpression: "if" Term "then" • Expression "else" Expression

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Expression            go to state 247
    CallExpression        go to state 68
    DirectCallExpression  go to state 69
    MethodCallExpression  go to state 70
    Literal               go to state 71
    BooleanLiteral        go to state 72
    IntegerLiteral        go to state 73
    BinaryLiteral         go to state 74
    StringLiteral         go to state 75
    SetLiteral            go to state 76
    ListLiteral           go to state 77
    RangeLiteral          go to state 78
    RecordLiteral         go to state 79
    MappingLiteral        go to state 80
    ReferenceLiteral      go to state 81
    GrammarLiteral        go to state 82
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 179

  143 GrammarLiteral: "::" Terminals ";" •

    $default  reduce using rule 143 (GrammarLiteral)


State 180

  144 Terminals: Terminals Terminal •

    $default  reduce using rule 144 (Terminals)


State 181

   75 Expression: "(" Term ")" •

    $default  reduce using rule 75 (Expression)


State 182

  131 ListLiteral: "[" Terms "]" •

    $default  reduce using rule 131 (ListLiteral)


State 183

   69 Terms: Terms "," • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 248
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 184

  132 RangeLiteral: "[" Term ".." • Term "]"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 249
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 185

   69 Terms: Terms • "," Term
  141 Mapping: "(" Terms • ")" "->" Term

    ")"  shift, and go to state 250
    ","  shift, and go to state 183


State 186

   70 Terms: Term •
   75 Expression: "(" Term • ")"
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155
    ")"        shift, and go to state 181

    ")"       [reduce using rule 70 (Terms)]
    $default  reduce using rule 70 (Terms)


State 187

  130 SetLiteral: "{" Terms "}" •

    $default  reduce using rule 130 (SetLiteral)


State 188

  140 Mapping: Term "->" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 251
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 189

  133 RecordLiteral: "{" Assignments "}" •

    $default  reduce using rule 133 (RecordLiteral)


State 190

  134 Assignments: Assignments "," • Assignment

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Assignment  go to state 252
    Identifier  go to state 253


State 191

  137 MappingLiteral: "{" Mappings "}" •

    $default  reduce using rule 137 (MappingLiteral)


State 192

  138 Mappings: Mappings "," • Mapping

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 128
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 254
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    Mapping                go to state 255
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 193

  136 Assignment: Identifier ":" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 256
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 194

   83 OperatorExpression: Term • "and" Term
   83                   | Term "and" Term •
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "="     shift, and go to state 150
    "!="    shift, and go to state 151
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 83 (OperatorExpression)


State 195

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   84                   | Term "or" Term •
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"   shift, and go to state 136
    "xor"   shift, and go to state 138
    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "="     shift, and go to state 150
    "!="    shift, and go to state 151
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 84 (OperatorExpression)


State 196

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   85                   | Term "xor" Term •
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"   shift, and go to state 136
    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "="     shift, and go to state 150
    "!="    shift, and go to state 151
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 85 (OperatorExpression)


State 197

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   86                   | Term "implies" Term •
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"   shift, and go to state 136
    "or"    shift, and go to state 137
    "xor"   shift, and go to state 138
    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "="     shift, and go to state 150
    "!="    shift, and go to state 151
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 86 (OperatorExpression)


State 198

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   87                   | Term "=>" Term •
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"   shift, and go to state 136
    "or"    shift, and go to state 137
    "xor"   shift, and go to state 138
    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "="     shift, and go to state 150
    "!="    shift, and go to state 151
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 87 (OperatorExpression)


State 199

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   88                   | Term "+" Term •
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "*"  shift, and go to state 145

    $default  reduce using rule 88 (OperatorExpression)


State 200

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   89                   | Term "(+)" Term •
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "*"  shift, and go to state 145

    $default  reduce using rule 89 (OperatorExpression)


State 201

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   90                   | Term "-" Term •
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "*"  shift, and go to state 145

    $default  reduce using rule 90 (OperatorExpression)


State 202

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   91                   | Term "(-)" Term •
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "*"  shift, and go to state 145

    $default  reduce using rule 91 (OperatorExpression)


State 203

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   92                   | Term "*" Term •
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    $default  reduce using rule 92 (OperatorExpression)


State 204

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   93                   | Term "<<" Term •
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"    shift, and go to state 141
    "(+)"  shift, and go to state 142
    "-"    shift, and go to state 143
    "(-)"  shift, and go to state 144
    "*"    shift, and go to state 145

    $default  reduce using rule 93 (OperatorExpression)


State 205

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   94                   | Term "(<<)" Term •
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"    shift, and go to state 141
    "(+)"  shift, and go to state 142
    "-"    shift, and go to state 143
    "(-)"  shift, and go to state 144
    "*"    shift, and go to state 145

    $default  reduce using rule 94 (OperatorExpression)


State 206

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   95                   | Term ">>" Term •
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"    shift, and go to state 141
    "(+)"  shift, and go to state 142
    "-"    shift, and go to state 143
    "(-)"  shift, and go to state 144
    "*"    shift, and go to state 145

    $default  reduce using rule 95 (OperatorExpression)


State 207

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   96                   | Term "(>>)" Term •
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"    shift, and go to state 141
    "(+)"  shift, and go to state 142
    "-"    shift, and go to state 143
    "(-)"  shift, and go to state 144
    "*"    shift, and go to state 145

    $default  reduce using rule 96 (OperatorExpression)


State 208

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   97                   | Term "=" Term •
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 97 (OperatorExpression)


State 209

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   98                   | Term "!=" Term •
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149
    "<"     shift, and go to state 152
    "<="    shift, and go to state 153
    ">"     shift, and go to state 154
    ">="    shift, and go to state 155

    $default  reduce using rule 98 (OperatorExpression)


State 210

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
   99                   | Term "<" Term •
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149

    $default  reduce using rule 99 (OperatorExpression)


State 211

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  100                   | Term "<=" Term •
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149

    $default  reduce using rule 100 (OperatorExpression)


State 212

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  101                   | Term ">" Term •
  102                   | Term • ">=" Term

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149

    $default  reduce using rule 101 (OperatorExpression)


State 213

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  102                   | Term ">=" Term •

    "+"     shift, and go to state 141
    "(+)"   shift, and go to state 142
    "-"     shift, and go to state 143
    "(-)"   shift, and go to state 144
    "*"     shift, and go to state 145
    "<<"    shift, and go to state 146
    "(<<)"  shift, and go to state 147
    ">>"    shift, and go to state 148
    "(>>)"  shift, and go to state 149

    $default  reduce using rule 102 (OperatorExpression)


State 214

  109 MethodCallExpression: Expression "." Identifier •
  110                     | Expression "." Identifier • "(" ")"
  111                     | Expression "." Identifier • "(" Terms ")"
  112                     | Expression "." Identifier • "(" error ")"

    "("  shift, and go to state 257

    $default  reduce using rule 109 (MethodCallExpression)


State 215

  170 IdentifierPath: IdentifierPath "::" Identifier •

    $default  reduce using rule 170 (IdentifierPath)


State 216

  108 DirectCallExpression: IdentifierPath "(" error • ")"

    ")"  shift, and go to state 258


State 217

  106 DirectCallExpression: IdentifierPath "(" ")" •

    $default  reduce using rule 106 (DirectCallExpression)


State 218

   69 Terms: Terms • "," Term
  107 DirectCallExpression: IdentifierPath "(" Terms • ")"

    ")"  shift, and go to state 259
    ","  shift, and go to state 183


State 219

   70 Terms: Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 70 (Terms)


State 220

  158 ArgumentTypes: Type •

    $default  reduce using rule 158 (ArgumentTypes)


State 221

  151 Type: BasicType •

    $default  reduce using rule 151 (Type)


State 222

  154 BasicType: PropertyType •

    $default  reduce using rule 154 (BasicType)


State 223

   21 MemoryDefinition: "memory" Identifier ":" MappingType •
  152 Type: MappingType •

    "*"       reduce using rule 152 (Type)
    "->"      reduce using rule 152 (Type)
    $default  reduce using rule 21 (MemoryDefinition)


State 224

  156 MappingType: ArgumentTypes • "->" BasicType
  157 ArgumentTypes: ArgumentTypes • "*" BasicType

    "*"   shift, and go to state 260
    "->"  shift, and go to state 261


State 225

  153 BasicType: IdentifierPath •
  155 PropertyType: IdentifierPath • "'" IntegerLiteral
  170 IdentifierPath: IdentifierPath • "::" Identifier

    "'"   shift, and go to state 262
    "::"  shift, and go to state 157

    $default  reduce using rule 153 (BasicType)


State 226

   22 RegisterDefinition: "register" Identifier ":" Type •
  158 ArgumentTypes: Type •

    "*"       reduce using rule 158 (ArgumentTypes)
    "->"      reduce using rule 158 (ArgumentTypes)
    $default  reduce using rule 22 (RegisterDefinition)


State 227

  152 Type: MappingType •

    $default  reduce using rule 152 (Type)


State 228

   23 FieldDefinition: "field" Identifier ":" Type •
  158 ArgumentTypes: Type •

    "*"       reduce using rule 158 (ArgumentTypes)
    "->"      reduce using rule 158 (ArgumentTypes)
    $default  reduce using rule 23 (FieldDefinition)


State 229

   24 FormatDefinition: "format" Identifier ":" BasicType • "=" FormatFields

    "="  shift, and go to state 263


State 230

   26 BufferDefinition: "buffer" Identifier ":" Type • "=" Term
  158 ArgumentTypes: Type •

    "="  shift, and go to state 264

    $default  reduce using rule 158 (ArgumentTypes)


State 231

   27 InstructionDefinition: "instruction" Identifier ":" BasicType • "=" Statement
   28                      | "instruction" Identifier ":" BasicType • "=" Statement InstructionOptions

    "="  shift, and go to state 265


State 232

   29 MicroProcessorDefinition: "microprocessor" Identifier ":" IdentifierPath • "=" Statement
   30                         | "microprocessor" Identifier ":" IdentifierPath • "=" Statement MicroProcessorOptions
  170 IdentifierPath: IdentifierPath • "::" Identifier

    "="   shift, and go to state 266
    "::"  shift, and go to state 157


State 233

   31 CacheDefinition: "cache" Identifier ":" Type • "=" MappingLiteral
  158 ArgumentTypes: Type •

    "="  shift, and go to state 267

    $default  reduce using rule 158 (ArgumentTypes)


State 234

   32 InterconnectDefinition: "interconnect" Identifier ":" Type • "=" MappingLiteral
  158 ArgumentTypes: Type •

    "="  shift, and go to state 268

    $default  reduce using rule 158 (ArgumentTypes)


State 235

  130 SetLiteral: "{" • Terms "}"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Terms                  go to state 129
    Term                   go to state 219
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 236

   36 EnumerationDefinition: "enumeration" Identifier "=" Enumerators •

    $default  reduce using rule 36 (EnumerationDefinition)


State 237

   37 Enumerators: SetLiteral •

    $default  reduce using rule 37 (Enumerators)


State 238

   38 UsingDefinition: "using" Identifier "=" Type •
  158 ArgumentTypes: Type •

    "*"       reduce using rule 158 (ArgumentTypes)
    "->"      reduce using rule 158 (ArgumentTypes)
    $default  reduce using rule 38 (UsingDefinition)


State 239

  133 RecordLiteral: "{" • Assignments "}"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Assignments  go to state 131
    Assignment   go to state 132
    Identifier   go to state 253


State 240

   44 DecodingOption: "decoding" "=" RecordLiteral •

    $default  reduce using rule 44 (DecodingOption)


State 241

   45 SyntaxOption: "syntax" "=" SetLiteral •

    $default  reduce using rule 45 (SyntaxOption)


State 242

   46 ExpansionOption: "expansion" "=" SetLiteral •

    $default  reduce using rule 46 (ExpansionOption)


State 243

   80 LetExpression: "let" VariableBindings "in" Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 80 (LetExpression)


State 244

  159 VariableBindings: VariableBindings "," VariableBinding •

    $default  reduce using rule 159 (VariableBindings)


State 245

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  161 VariableBinding: AttributedVariable "=" Term •

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 161 (VariableBinding)


State 246

  158 ArgumentTypes: Type •
  166 TypedVariable: Identifier ":" Type •

    "="       reduce using rule 166 (TypedVariable)
    $default  reduce using rule 158 (ArgumentTypes)


State 247

   81 ConditionalExpression: "if" Term "then" Expression • "else" Expression
  109 MethodCallExpression: Expression • "." Identifier
  110                     | Expression • "." Identifier "(" ")"
  111                     | Expression • "." Identifier "(" Terms ")"
  112                     | Expression • "." Identifier "(" error ")"

    "else"  shift, and go to state 269
    "."     shift, and go to state 156


State 248

   69 Terms: Terms "," Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 69 (Terms)


State 249

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  132 RangeLiteral: "[" Term ".." Term • "]"

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155
    "]"        shift, and go to state 270


State 250

  141 Mapping: "(" Terms ")" • "->" Term

    "->"  shift, and go to state 271


State 251

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  140 Mapping: Term "->" Term •

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 140 (Mapping)


State 252

  134 Assignments: Assignments "," Assignment •

    $default  reduce using rule 134 (Assignments)


State 253

  136 Assignment: Identifier • ":" Term

    ":"  shift, and go to state 193


State 254

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  140 Mapping: Term • "->" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155
    "->"       shift, and go to state 188


State 255

  138 Mappings: Mappings "," Mapping •

    $default  reduce using rule 138 (Mappings)


State 256

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  136 Assignment: Identifier ":" Term •

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 136 (Assignment)


State 257

  110 MethodCallExpression: Expression "." Identifier "(" • ")"
  111                     | Expression "." Identifier "(" • Terms ")"
  112                     | Expression "." Identifier "(" • error ")"

    error          shift, and go to state 272
    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    ")"            shift, and go to state 273
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Terms                  go to state 274
    Term                   go to state 219
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 258

  108 DirectCallExpression: IdentifierPath "(" error ")" •

    $default  reduce using rule 108 (DirectCallExpression)


State 259

  107 DirectCallExpression: IdentifierPath "(" Terms ")" •

    $default  reduce using rule 107 (DirectCallExpression)


State 260

  157 ArgumentTypes: ArgumentTypes "*" • BasicType

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    BasicType       go to state 275
    PropertyType    go to state 222
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 261

  156 MappingType: ArgumentTypes "->" • BasicType

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    BasicType       go to state 276
    PropertyType    go to state 222
    Identifier      go to state 83
    IdentifierPath  go to state 225


State 262

  155 PropertyType: IdentifierPath "'" • IntegerLiteral

    "integer"  shift, and go to state 59

    IntegerLiteral  go to state 277


State 263

   24 FormatDefinition: "format" Identifier ":" BasicType "=" • FormatFields

    "{"  shift, and go to state 278

    FormatFields    go to state 279
    MappingLiteral  go to state 280


State 264

   26 BufferDefinition: "buffer" Identifier ":" Type "=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 281
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 265

   27 InstructionDefinition: "instruction" Identifier ":" BasicType "=" • Statement
   28                      | "instruction" Identifier ":" BasicType "=" • Statement InstructionOptions

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "identifier"   shift, and go to state 10

    Statement             go to state 287
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 266

   29 MicroProcessorDefinition: "microprocessor" Identifier ":" IdentifierPath "=" • Statement
   30                         | "microprocessor" Identifier ":" IdentifierPath "=" • Statement MicroProcessorOptions

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "identifier"   shift, and go to state 10

    Statement             go to state 296
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 267

   31 CacheDefinition: "cache" Identifier ":" Type "=" • MappingLiteral

    "{"  shift, and go to state 278

    MappingLiteral  go to state 297


State 268

   32 InterconnectDefinition: "interconnect" Identifier ":" Type "=" • MappingLiteral

    "{"  shift, and go to state 278

    MappingLiteral  go to state 298


State 269

   81 ConditionalExpression: "if" Term "then" Expression "else" • Expression

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Expression            go to state 299
    CallExpression        go to state 68
    DirectCallExpression  go to state 69
    MethodCallExpression  go to state 70
    Literal               go to state 71
    BooleanLiteral        go to state 72
    IntegerLiteral        go to state 73
    BinaryLiteral         go to state 74
    StringLiteral         go to state 75
    SetLiteral            go to state 76
    ListLiteral           go to state 77
    RangeLiteral          go to state 78
    RecordLiteral         go to state 79
    MappingLiteral        go to state 80
    ReferenceLiteral      go to state 81
    GrammarLiteral        go to state 82
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 270

  132 RangeLiteral: "[" Term ".." Term "]" •

    $default  reduce using rule 132 (RangeLiteral)


State 271

  141 Mapping: "(" Terms ")" "->" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 300
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 272

  112 MethodCallExpression: Expression "." Identifier "(" error • ")"

    ")"  shift, and go to state 301


State 273

  110 MethodCallExpression: Expression "." Identifier "(" ")" •

    $default  reduce using rule 110 (MethodCallExpression)


State 274

   69 Terms: Terms • "," Term
  111 MethodCallExpression: Expression "." Identifier "(" Terms • ")"

    ")"  shift, and go to state 302
    ","  shift, and go to state 183


State 275

  157 ArgumentTypes: ArgumentTypes "*" BasicType •

    $default  reduce using rule 157 (ArgumentTypes)


State 276

  156 MappingType: ArgumentTypes "->" BasicType •

    $default  reduce using rule 156 (MappingType)


State 277

  155 PropertyType: IdentifierPath "'" IntegerLiteral •

    $default  reduce using rule 155 (PropertyType)


State 278

  137 MappingLiteral: "{" • Mappings "}"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 128
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 254
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    Mappings               go to state 133
    Mapping                go to state 134
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 279

   24 FormatDefinition: "format" Identifier ":" BasicType "=" FormatFields •

    $default  reduce using rule 24 (FormatDefinition)


State 280

   25 FormatFields: MappingLiteral •

    $default  reduce using rule 25 (FormatFields)


State 281

   26 BufferDefinition: "buffer" Identifier ":" Type "=" Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 26 (BufferDefinition)


State 282

   60 SkipStatement: "skip" •

    $default  reduce using rule 60 (SkipStatement)


State 283

   61 AbstractStatement: "abstract" •

    $default  reduce using rule 61 (AbstractStatement)


State 284

   65 LetStatement: "let" • VariableBindings "in" Statement

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "["            shift, and go to state 2
    "identifier"   shift, and go to state 10

    VariableBindings    go to state 303
    VariableBinding     go to state 108
    AttributedVariable  go to state 109
    Variable            go to state 110
    TypedVariable       go to state 111
    Identifier          go to state 112
    Attributes          go to state 113
    Attribute           go to state 6


State 285

   67 ConditionalStatement: "if" • Term "then" Statement
   68                     | "if" • Term "then" Statement "else" Statement

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 304
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 286

   62 BlockStatement: "{" • Statements "}"
   63               | "{" • error "}"

    error          shift, and go to state 305
    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "identifier"   shift, and go to state 10

    Statements            go to state 306
    Statement             go to state 307
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 287

   27 InstructionDefinition: "instruction" Identifier ":" BasicType "=" Statement •
   28                      | "instruction" Identifier ":" BasicType "=" Statement • InstructionOptions

    "decoding"   shift, and go to state 100
    "syntax"     shift, and go to state 101
    "expansion"  shift, and go to state 102

    $default  reduce using rule 27 (InstructionDefinition)

    InstructionOptions  go to state 308
    InstructionOption   go to state 309
    DecodingOption      go to state 310
    SyntaxOption        go to state 311
    ExpansionOption     go to state 312


State 288

   53 Statement: SkipStatement •

    $default  reduce using rule 53 (Statement)


State 289

   54 Statement: AbstractStatement •

    $default  reduce using rule 54 (Statement)


State 290

   55 Statement: BlockStatement •

    $default  reduce using rule 55 (Statement)


State 291

   56 Statement: CallStatement •

    $default  reduce using rule 56 (Statement)


State 292

   57 Statement: LetStatement •

    $default  reduce using rule 57 (Statement)


State 293

   58 Statement: AssignmentStatement •

    $default  reduce using rule 58 (Statement)


State 294

   59 Statement: ConditionalStatement •

    $default  reduce using rule 59 (Statement)


State 295

   64 CallStatement: DirectCallExpression •
   66 AssignmentStatement: DirectCallExpression • ":=" Term

    ":="  shift, and go to state 313

    $default  reduce using rule 64 (CallStatement)


State 296

   29 MicroProcessorDefinition: "microprocessor" Identifier ":" IdentifierPath "=" Statement •
   30                         | "microprocessor" Identifier ":" IdentifierPath "=" Statement • MicroProcessorOptions

    "stage"  shift, and go to state 314

    $default  reduce using rule 29 (MicroProcessorDefinition)

    MicroProcessorOptions  go to state 315
    MicroProcessorOption   go to state 316
    StageOption            go to state 317


State 297

   31 CacheDefinition: "cache" Identifier ":" Type "=" MappingLiteral •

    $default  reduce using rule 31 (CacheDefinition)


State 298

   32 InterconnectDefinition: "interconnect" Identifier ":" Type "=" MappingLiteral •

    $default  reduce using rule 32 (InterconnectDefinition)


State 299

   81 ConditionalExpression: "if" Term "then" Expression "else" Expression •
  109 MethodCallExpression: Expression • "." Identifier
  110                     | Expression • "." Identifier "(" ")"
  111                     | Expression • "." Identifier "(" Terms ")"
  112                     | Expression • "." Identifier "(" error ")"

    "."  shift, and go to state 156

    $default  reduce using rule 81 (ConditionalExpression)


State 300

   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term
  141 Mapping: "(" Terms ")" "->" Term •

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 141 (Mapping)


State 301

  112 MethodCallExpression: Expression "." Identifier "(" error ")" •

    $default  reduce using rule 112 (MethodCallExpression)


State 302

  111 MethodCallExpression: Expression "." Identifier "(" Terms ")" •

    $default  reduce using rule 111 (MethodCallExpression)


State 303

   65 LetStatement: "let" VariableBindings • "in" Statement
  159 VariableBindings: VariableBindings • "," VariableBinding

    "in"  shift, and go to state 318
    ","   shift, and go to state 174


State 304

   67 ConditionalStatement: "if" Term • "then" Statement
   68                     | "if" Term • "then" Statement "else" Statement
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "then"     shift, and go to state 319
    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155


State 305

   63 BlockStatement: "{" error • "}"

    "}"  shift, and go to state 320


State 306

   51 Statements: Statements • Statement
   62 BlockStatement: "{" Statements • "}"

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "}"            shift, and go to state 321
    "identifier"   shift, and go to state 10

    Statement             go to state 322
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 307

   52 Statements: Statement •

    $default  reduce using rule 52 (Statements)


State 308

   28 InstructionDefinition: "instruction" Identifier ":" BasicType "=" Statement InstructionOptions •
   39 InstructionOptions: InstructionOptions • InstructionOption

    "decoding"   shift, and go to state 100
    "syntax"     shift, and go to state 101
    "expansion"  shift, and go to state 102

    $default  reduce using rule 28 (InstructionDefinition)

    InstructionOption  go to state 323
    DecodingOption     go to state 310
    SyntaxOption       go to state 311
    ExpansionOption    go to state 312


State 309

   40 InstructionOptions: InstructionOption •

    $default  reduce using rule 40 (InstructionOptions)


State 310

   41 InstructionOption: DecodingOption •

    $default  reduce using rule 41 (InstructionOption)


State 311

   42 InstructionOption: SyntaxOption •

    $default  reduce using rule 42 (InstructionOption)


State 312

   43 InstructionOption: ExpansionOption •

    $default  reduce using rule 43 (InstructionOption)


State 313

   66 AssignmentStatement: DirectCallExpression ":=" • Term

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "let"          shift, and go to state 48
    "if"           shift, and go to state 49
    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "not"          shift, and go to state 52
    "+"            shift, and go to state 53
    "-"            shift, and go to state 54
    "::"           shift, and go to state 55
    "("            shift, and go to state 56
    "["            shift, and go to state 57
    "{"            shift, and go to state 58
    "@"            shift, and go to state 27
    "integer"      shift, and go to state 59
    "binary"       shift, and go to state 60
    "hexadecimal"  shift, and go to state 61
    "string"       shift, and go to state 62
    "identifier"   shift, and go to state 10

    Term                   go to state 324
    Expression             go to state 64
    LetExpression          go to state 65
    ConditionalExpression  go to state 66
    OperatorExpression     go to state 67
    CallExpression         go to state 68
    DirectCallExpression   go to state 69
    MethodCallExpression   go to state 70
    Literal                go to state 71
    BooleanLiteral         go to state 72
    IntegerLiteral         go to state 73
    BinaryLiteral          go to state 74
    StringLiteral          go to state 75
    SetLiteral             go to state 76
    ListLiteral            go to state 77
    RangeLiteral           go to state 78
    RecordLiteral          go to state 79
    MappingLiteral         go to state 80
    ReferenceLiteral       go to state 81
    GrammarLiteral         go to state 82
    Identifier             go to state 83
    IdentifierPath         go to state 84


State 314

   50 StageOption: "stage" • Identifier "=" BlockStatement

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "identifier"   shift, and go to state 10

    Identifier  go to state 325


State 315

   30 MicroProcessorDefinition: "microprocessor" Identifier ":" IdentifierPath "=" Statement MicroProcessorOptions •
   47 MicroProcessorOptions: MicroProcessorOptions • MicroProcessorOption

    "stage"  shift, and go to state 314

    $default  reduce using rule 30 (MicroProcessorDefinition)

    MicroProcessorOption  go to state 326
    StageOption           go to state 317


State 316

   48 MicroProcessorOptions: MicroProcessorOption •

    $default  reduce using rule 48 (MicroProcessorOptions)


State 317

   49 MicroProcessorOption: StageOption •

    $default  reduce using rule 49 (MicroProcessorOption)


State 318

   65 LetStatement: "let" VariableBindings "in" • Statement

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "identifier"   shift, and go to state 10

    Statement             go to state 327
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 319

   67 ConditionalStatement: "if" Term "then" • Statement
   68                     | "if" Term "then" • Statement "else" Statement

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "identifier"   shift, and go to state 10

    Statement             go to state 328
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 320

   63 BlockStatement: "{" error "}" •

    $default  reduce using rule 63 (BlockStatement)


State 321

   62 BlockStatement: "{" Statements "}" •

    $default  reduce using rule 62 (BlockStatement)


State 322

   51 Statements: Statements Statement •

    $default  reduce using rule 51 (Statements)


State 323

   39 InstructionOptions: InstructionOptions InstructionOption •

    $default  reduce using rule 39 (InstructionOptions)


State 324

   66 AssignmentStatement: DirectCallExpression ":=" Term •
   83 OperatorExpression: Term • "and" Term
   84                   | Term • "or" Term
   85                   | Term • "xor" Term
   86                   | Term • "implies" Term
   87                   | Term • "=>" Term
   88                   | Term • "+" Term
   89                   | Term • "(+)" Term
   90                   | Term • "-" Term
   91                   | Term • "(-)" Term
   92                   | Term • "*" Term
   93                   | Term • "<<" Term
   94                   | Term • "(<<)" Term
   95                   | Term • ">>" Term
   96                   | Term • "(>>)" Term
   97                   | Term • "=" Term
   98                   | Term • "!=" Term
   99                   | Term • "<" Term
  100                   | Term • "<=" Term
  101                   | Term • ">" Term
  102                   | Term • ">=" Term

    "and"      shift, and go to state 136
    "or"       shift, and go to state 137
    "xor"      shift, and go to state 138
    "implies"  shift, and go to state 139
    "=>"       shift, and go to state 140
    "+"        shift, and go to state 141
    "(+)"      shift, and go to state 142
    "-"        shift, and go to state 143
    "(-)"      shift, and go to state 144
    "*"        shift, and go to state 145
    "<<"       shift, and go to state 146
    "(<<)"     shift, and go to state 147
    ">>"       shift, and go to state 148
    "(>>)"     shift, and go to state 149
    "="        shift, and go to state 150
    "!="       shift, and go to state 151
    "<"        shift, and go to state 152
    "<="       shift, and go to state 153
    ">"        shift, and go to state 154
    ">="       shift, and go to state 155

    $default  reduce using rule 66 (AssignmentStatement)


State 325

   50 StageOption: "stage" Identifier • "=" BlockStatement

    "="  shift, and go to state 329


State 326

   47 MicroProcessorOptions: MicroProcessorOptions MicroProcessorOption •

    $default  reduce using rule 47 (MicroProcessorOptions)


State 327

   65 LetStatement: "let" VariableBindings "in" Statement •

    $default  reduce using rule 65 (LetStatement)


State 328

   67 ConditionalStatement: "if" Term "then" Statement •
   68                     | "if" Term "then" Statement • "else" Statement

    "else"  shift, and go to state 330

    $default  reduce using rule 67 (ConditionalStatement)


State 329

   50 StageOption: "stage" Identifier "=" • BlockStatement

    "{"  shift, and go to state 286

    BlockStatement  go to state 331


State 330

   68 ConditionalStatement: "if" Term "then" Statement "else" • Statement

    "instruction"  shift, and go to state 8
    "decoding"     shift, and go to state 9
    "skip"         shift, and go to state 282
    "abstract"     shift, and go to state 283
    "let"          shift, and go to state 284
    "if"           shift, and go to state 285
    "{"            shift, and go to state 286
    "identifier"   shift, and go to state 10

    Statement             go to state 332
    SkipStatement         go to state 288
    AbstractStatement     go to state 289
    BlockStatement        go to state 290
    CallStatement         go to state 291
    LetStatement          go to state 292
    AssignmentStatement   go to state 293
    ConditionalStatement  go to state 294
    DirectCallExpression  go to state 295
    Identifier            go to state 83
    IdentifierPath        go to state 84


State 331

   50 StageOption: "stage" Identifier "=" BlockStatement •

    $default  reduce using rule 50 (StageOption)


State 332

   68 ConditionalStatement: "if" Term "then" Statement "else" Statement •

    $default  reduce using rule 68 (ConditionalStatement)
